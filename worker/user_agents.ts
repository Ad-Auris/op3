
export function computeUserAgentEntityResult(userAgent: string, referer?: string): EntityResult | undefined {
    const rt = findUserAgentEntity(userAgent);
    if (rt) {
        const device = rt.type !== 'bot' ? findUserAgentDeviceEntity(userAgent) : undefined;
        const referrer = referer && rt.type === 'browser' ? findUserAgentReferrerEntity(referer) : undefined;
        return { ...rt, device, referrer };
    }
}

//

export type EntityType = 'bot' | 'app' | 'library' | 'browser' | 'device' | 'referrer';

export type Entity = { readonly name: string, readonly type: EntityType, readonly category?: string };

export type EntityResult = Entity & { device?: Entity, referrer?: Entity };


// GENERATED

// from user-agents-v2@af426a2766018bc6727bcf45d982433c7fa6cc74 (2024-02-28T17:54:03Z)

export function findUserAgentEntity(userAgent: string): Entity | undefined {

    // bots
    if (/AAABot/.test(userAgent)) return { name: `AAABot - unknown bot`, type: 'bot' };
    if (/^AIS VirtualListener/.test(userAgent)) return { name: `Adswizz`, type: 'bot' };
    if (/AhrefsBot\//.test(userAgent)) return { name: `AhrefsBot`, type: 'bot' };
    if (/AirableBot-Podcast\//.test(userAgent)) return { name: `AirableBot`, type: 'bot' };
    if (/^AmazonNewsContentService/.test(userAgent)) return { name: `Alexa Flash Briefing cache`, type: 'bot' };
    if (/^Alignabot/.test(userAgent)) return { name: `AlignaBot`, type: 'bot' };
    if (/^Amazon Music Podcast/.test(userAgent)) return { name: `Amazon Music Podcasts Bot`, type: 'bot' };
    if (/AnchorImport/.test(userAgent)) return { name: `Anchor Importer`, type: 'bot' };
    if (/^atc\/|\(null\) watchOS\//.test(userAgent)) return { name: `Apple Podcasts (Watch)`, type: 'bot' };
    if (/(iTMS|itunesstored|itms)/.test(userAgent)) return { name: `Apple Podcasts automated checks`, type: 'bot' };
    if (/^Applebot\//.test(userAgent)) return { name: `Applebot`, type: 'bot' };
    if (/archive\.org_bot/.test(userAgent)) return { name: `Archive.org`, type: 'bot' };
    if (/^atheerfm\//.test(userAgent)) return { name: `atheerfm`, type: 'bot' };
    if (/^Audiomack Podcast Processor\//.test(userAgent)) return { name: `Audiomack`, type: 'bot' };
    if (/^AudioWaveBot\/1\.0/.test(userAgent)) return { name: `AudioWave feed parser`, type: 'bot' };
    if (/^AwarioSmartBot\//.test(userAgent)) return { name: `AwarioSmartBot`, type: 'bot' };
    if (/Barkrowler\//.test(userAgent)) return { name: `Babbar`, type: 'bot' };
    if (/\(ce\.baidu\.com/.test(userAgent)) return { name: `Baidu`, type: 'bot' };
    if (/^bbot\//.test(userAgent)) return { name: `bbot`, type: 'bot' };
    if (/^bl\.uk_ldfc_bot/.test(userAgent)) return { name: `British Library`, type: 'bot' };
    if (/^Blubrry Migration Service/.test(userAgent)) return { name: `Blubrry Migration Service`, type: 'bot' };
    if (/^Buzzsprout Importer/.test(userAgent)) return { name: `Buzzsprout Importer`, type: 'bot' };
    if (/Bytespider/.test(userAgent)) return { name: `Bytespider.*bytedance`, type: 'bot' };
    if (/^CastFeedValidator\//.test(userAgent)) return { name: `CastFeedValidator`, type: 'bot' };
    if (/Castopod\/\d/.test(userAgent)) return { name: `Castopod`, type: 'bot' };
    if (/^Trackable\//.test(userAgent)) return { name: `Chartable`, type: 'bot' };
    if (/^clark-crawler2/.test(userAgent)) return { name: `Clark-Crawler, unknown`, type: 'bot' };
    if (/^Podcast-CriticalMention\//.test(userAgent)) return { name: `Critical Mention`, type: 'bot' };
    if (/^curl|^libcurl\/|^PycURL\/| curl\//.test(userAgent)) return { name: `curl`, type: 'bot' };
    if (/DataForSeoBot\//.test(userAgent)) return { name: `DataforSEO`, type: 'bot' };
    if (/^datagnionbot/.test(userAgent)) return { name: `Datagnion Bot`, type: 'bot' };
    if (/Dataprovider\.com/.test(userAgent)) return { name: `dataprovider.com`, type: 'bot' };
    if (/http:\/\/cs\.daum\.net/.test(userAgent)) return { name: `Daum`, type: 'bot' };
    if (/^Deezer Podcasters\/1\.0/.test(userAgent)) return { name: `Deezer Podcasters`, type: 'bot' };
    if (/^Digg /.test(userAgent)) return { name: `Digg`, type: 'bot' };
    if (/support@dorada\.co\.uk/.test(userAgent)) return { name: `dorada`, type: 'bot' };
    if (/DotBot/.test(userAgent)) return { name: `DotBot`, type: 'bot' };
    if (/downcast feed consumer\//.test(userAgent)) return { name: `Downcast Bot`, type: 'bot' };
    if (/DuckDuckBot/.test(userAgent)) return { name: `DuckDuckBot`, type: 'bot' };
    if (/^Riddler /.test(userAgent)) return { name: `F-Secure Riddler`, type: 'bot' };
    if (/FacebookBot|f?acebookexternalhit\/?|^podcastbot$|Facebot|facebookexternalua|^facebookplatform\//.test(userAgent)) return { name: `Facebook Bot`, type: 'bot' };
    if (/^Feedly\//.test(userAgent)) return { name: `Feedly`, type: 'bot' };
    if (/https:\/\/www\.feedspot\.com\/fs\/fetcher/.test(userAgent)) return { name: `Feedspot Fetcher`, type: 'bot' };
    if (/^FlexGet\//.test(userAgent)) return { name: `FlexGet`, type: 'bot' };
    if (/FlipboardProxy\//.test(userAgent)) return { name: `Flipboard Proxy`, type: 'bot' };
    if (/^fyyd-poll/.test(userAgent)) return { name: `Fyyd`, type: 'bot' };
    if (/^storagegw-v1-go$/.test(userAgent)) return { name: `Go Storage Gateway V1`, type: 'bot' };
    if (/Goodpods\/\d+\.\d+/.test(userAgent)) return { name: `Goodpods Bot`, type: 'bot' };
    if (/Mediapartners-Google/.test(userAgent)) return { name: `Google Adsense Bot`, type: 'bot' };
    if (/AdsBot-Google/.test(userAgent)) return { name: `Google AdsBot`, type: 'bot' };
    if (/Google-Podcast/.test(userAgent)) return { name: `Google Podcasts Manager`, type: 'bot' };
    if (/Googlebot\/|Googlebot-Video\/|Googlebot-Image\/|^Feedfetcher-Google|google-xrawler|^Googlebot-News/.test(userAgent)) return { name: `Googlebot`, type: 'bot' };
    if (/^Gumball/.test(userAgent)) return { name: `Gumball`, type: 'bot' };
    if (/Headliner\//.test(userAgent)) return { name: `Headliner`, type: 'bot' };
    if (/HubSpot Crawler/.test(userAgent)) return { name: `HubSpot Crawler`, type: 'bot' };
    if (/Archive-It;|web\.archive\.org/.test(userAgent)) return { name: `Internet Archive`, type: 'bot' };
    if (/^Jaunt\//.test(userAgent)) return { name: `Jaunt`, type: 'bot' };
    if (/INA dlweb/.test(userAgent)) return { name: `l'Institut national de l'audiovisuel`, type: 'bot' };
    if (/LAC_IAHarvester\//.test(userAgent)) return { name: `Library and Archives Canada`, type: 'bot' };
    if (/^Libsyn4/.test(userAgent)) return { name: `Libsyn`, type: 'bot' };
    if (/^libwww-perl| libwww-perl/.test(userAgent)) return { name: `libwww-perl`, type: 'bot' };
    if (/LivelapBot/.test(userAgent)) return { name: `Livelap Crawler`, type: 'bot' };
    if (/^ltx71 /.test(userAgent)) return { name: `LTX71`, type: 'bot' };
    if (/^MauiBot/.test(userAgent)) return { name: `MauiBot`, type: 'bot' };
    if (/rb\/.*Mastodon\//.test(userAgent)) return { name: `Mastodon Bot`, type: 'bot' };
    if (/(BingPreview\/|adidxbot\/|[bB]ingbot\/)/.test(userAgent)) return { name: `Microsoft Bingbot`, type: 'bot' };
    if (/ms-office; MSOffice/.test(userAgent)) return { name: `Microsoft Office`, type: 'bot' };
    if (/^MixcloudPodcastImporter\//.test(userAgent)) return { name: `Mixcloud Podcast Importer`, type: 'bot' };
    if (/.*MJ12bot/.test(userAgent)) return { name: `MJ12bot`, type: 'bot' };
    if (/^'?Mozilla(\/5\.0(\.\.\.)?)?$|^\(Mozilla\/5\.0\)$/.test(userAgent)) return { name: `Mozilla Bot`, type: 'bot' };
    if (/^msnbot\//.test(userAgent)) return { name: `MSN Bot`, type: 'bot' };
    if (/.*Neevabot/.test(userAgent)) return { name: `Neevabot`, type: 'bot' };
    if (/ NetcraftSurveyAgent\//.test(userAgent)) return { name: `Netcraft Survey Agent`, type: 'bot' };
    if (/^newspaper\/\d/.test(userAgent)) return { name: `Newspaper`, type: 'bot' };
    if (/OgScrper/.test(userAgent)) return { name: `OgScrper`, type: 'bot' };
    if (/^OkDownload\//.test(userAgent)) return { name: `OkDownload`, type: 'bot' };
    if (/^op3-fetcher\//.test(userAgent)) return { name: `OP3 Fetcher`, type: 'bot' };
    if (/^Overcast\/1\.0 Podcast Sync/.test(userAgent)) return { name: `Overcast feed parser`, type: 'bot' };
    if (/^PandoraRSSCrawler/.test(userAgent)) return { name: `Pandora RSS crawler`, type: 'bot' };
    if (/PaperLiBot\//.test(userAgent)) return { name: `PaperLi`, type: 'bot' };
    if (/PetalBot/.test(userAgent)) return { name: `PetalBot`, type: 'bot' };
    if (/^Pingdom/.test(userAgent)) return { name: `Pingdom`, type: 'bot' };
    if (/PlayerFM\/.* Podcast Sync/.test(userAgent)) return { name: `PlayerFM Podcast Sync`, type: 'bot' };
    if (/^Podbean Importer/.test(userAgent)) return { name: `Podbean Importer`, type: 'bot' };
    if (/^Podcastindex\.org\//.test(userAgent)) return { name: `Podcastindex.org`, type: 'bot' };
    if (/^PodcastStandard\//.test(userAgent)) return { name: `Podcast de facto Standard`, type: 'bot' };
    if (/^Podcast%20Archiver\//.test(userAgent)) return { name: `Podcast Archiver`, type: 'bot' };
    if (/podCloud/.test(userAgent)) return { name: `PodCloud`, type: 'bot' };
    if (/Podcorn\//.test(userAgent)) return { name: `Podcorn`, type: 'bot' };
    if (/PodderBot\//.test(userAgent)) return { name: `PodderBot`, type: 'bot' };
    if (/podfollowbot\//.test(userAgent)) return { name: `Podfollow`, type: 'bot' };
    if (/^Podgrab$/.test(userAgent)) return { name: `Podgrab`, type: 'bot' };
    if (/PodhoundBeta/.test(userAgent)) return { name: `Podhound`, type: 'bot' };
    if (/^Podio\//.test(userAgent)) return { name: `Podio Bot`, type: 'bot' };
    if (/PodnewsBot/.test(userAgent)) return { name: `Podnews`, type: 'bot' };
    if (/(podnods-crawler|podnods)/.test(userAgent)) return { name: `Podnods Bot`, type: 'bot' };
    if (/^pdrl\.fm /.test(userAgent)) return { name: `Podroll Analyzer`, type: 'bot' };
    if (/(^Adswizz-podscribe\/|^Podscribe\/)/.test(userAgent)) return { name: `Podscribe`, type: 'bot' };
    if (/PodUptime\/\d/.test(userAgent)) return { name: `PodUptime`, type: 'bot' };
    if (/^Podverse\/Feed Parser/.test(userAgent)) return { name: `Podverse Feed Parser`, type: 'bot' };
    if (/^PodvineBot\//.test(userAgent)) return { name: `PodvineBot`, type: 'bot' };
    if (/^PostRank\//.test(userAgent)) return { name: `PostRank Bot`, type: 'bot' };
    if (/Podwatch-Pro Crawler/.test(userAgent)) return { name: `PodwatchPro`, type: 'bot' };
    if (/ HeadlessChrome\/\d/.test(userAgent)) return { name: `Puppeteer`, type: 'bot' };
    if (/python-requests/.test(userAgent)) return { name: `python-requests`, type: 'bot' };
    if (/qiniu.*spider/.test(userAgent)) return { name: `Qiniu spider`, type: 'bot' };
    if (/^Radioline Stream Monitoring/.test(userAgent)) return { name: `Radioline Stream Monitoring`, type: 'bot' };
    if (/RedCircle/.test(userAgent)) return { name: `RedCircle`, type: 'bot' };
    if (/ RidderBot\//.test(userAgent)) return { name: `Ridder Bot`, type: 'bot' };
    if (/^RSStT/.test(userAgent)) return { name: `RSS to Telegram`, type: 'bot' };
    if (/^RSSRadio \(/.test(userAgent)) return { name: `RSSRadio`, type: 'bot' };
    if (/^Mechanize|[ -]Mechanize\//.test(userAgent)) return { name: `Ruby Mechanize`, type: 'bot' };
    if (/^Screaming Frog /.test(userAgent)) return { name: `Screaming Frog SEO Spider`, type: 'bot' };
    if (/^SearchAtlas.*Crawler/.test(userAgent)) return { name: `SearchAtlas.com SEO Crawler`, type: 'bot' };
    if (/SemrushBot\/|^SEMrushBot$/.test(userAgent)) return { name: `SEMrushBot`, type: 'bot' };
    if (/SerendeputyBot\//.test(userAgent)) return { name: `Serendeputy`, type: 'bot' };
    if (/^Simplecast$/.test(userAgent)) return { name: `Simplecast`, type: 'bot' };
    if (/^Slackbot 1\.0/.test(userAgent)) return { name: `Slack Bot`, type: 'bot' };
    if (/:\/\/developers\.snap\.com\/robots/.test(userAgent)) return { name: `Snapchat Bot`, type: 'bot' };
    if (/^SoundOn\/[\d.]+\s+\(bot/.test(userAgent)) return { name: `SoundOn Bot`, type: 'bot' };
    if (/^Spotify\/1\.0$/.test(userAgent)) return { name: `Spotify cache service`, type: 'bot' };
    if (/^StitcherBot/.test(userAgent)) return { name: `Stitcher Bot`, type: 'bot' };
    if (/^SubstackContentFetch\//.test(userAgent)) return { name: `Substack Content Fetcher`, type: 'bot' };
    if (/^SupportingCast(\/.*)?$/.test(userAgent)) return { name: `SupportingCast`, type: 'bot' };
    if (/Timpibot\//.test(userAgent)) return { name: `Timpi search crawler`, type: 'bot' };
    if (/^Tiny Tiny RSS\//.test(userAgent)) return { name: `Tiny Tiny RSS`, type: 'bot' };
    if (/TrendsmapResolver\//.test(userAgent)) return { name: `Trendsmap Resolver`, type: 'bot' };
    if (/Twingly Recon;/.test(userAgent)) return { name: `Twingly Bot`, type: 'bot' };
    if (/^Twitterbot/.test(userAgent)) return { name: `Twitterbot`, type: 'bot' };
    if (/^Typhoeus/.test(userAgent)) return { name: `Typhoeus`, type: 'bot' };
    if (/^UCast\//.test(userAgent)) return { name: `UCast`, type: 'bot' };
    if (/^TelegramBot /.test(userAgent)) return { name: `TelegramBot`, type: 'bot' };
    if (/TTD-Content/.test(userAgent)) return { name: `theTradeDesk Content Web Scraper`, type: 'bot' };
    if (/^veritone\/engine-toolkit/.test(userAgent)) return { name: `Veritone Engine Toolkit`, type: 'bot' };
    if (/VurblBot/.test(userAgent)) return { name: `Vurbl`, type: 'bot' };
    if (/Wget/.test(userAgent)) return { name: `Wget`, type: 'bot' };
    if (/^weborama-fetcher/.test(userAgent)) return { name: `weborama`, type: 'bot' };
    if (/^ZDM\/.*Windows/.test(userAgent)) return { name: `Windows Crawler`, type: 'bot' };
    if (/WindowsPowerShell\//.test(userAgent)) return { name: `Windows PowerShell`, type: 'bot' };
    if (/^WordPress/.test(userAgent)) return { name: `WordPress`, type: 'bot' };
    if (/https?:\/\/wsrv.nl\//.test(userAgent)) return { name: `wsrv.nl`, type: 'bot' };
    if (/^yacybot/.test(userAgent)) return { name: `YaCy`, type: 'bot' };
    if (/Yahoo! Slurp/.test(userAgent)) return { name: `Yahoo Crawler`, type: 'bot' };
    if (/YandexBot\//.test(userAgent)) return { name: `YandexBot`, type: 'bot' };
    if (/^Zapier$/.test(userAgent)) return { name: `Zapier`, type: 'bot' };
    if (/^Zencastr\//.test(userAgent)) return { name: `Zencast`, type: 'bot' };

    // apps
    if (/Abandon\//.test(userAgent)) return { name: `Abandon`, type: 'app' };
    if (/^Acast.+([Aa]ndroid|iOS|Darwin)/.test(userAgent)) return { name: `Acast`, type: 'app' };
    if (/Accompany\//.test(userAgent)) return { name: `Accompany`, type: 'app' };
    if (/ActiasLuna\//.test(userAgent)) return { name: `ActiasLuna`, type: 'app' };
    if (/ActionExtension\//.test(userAgent)) return { name: `ActionExtension`, type: 'app' };
    if (/^Adori(-Dev)?\//.test(userAgent)) return { name: `Adori`, type: 'app' };
    if (/^Adori-Listen\//.test(userAgent)) return { name: `Adori-Listen`, type: 'app' };
    if (/^AdventureChurch\//.test(userAgent)) return { name: `AdventureChurch`, type: 'app' };
    if (/Android AP Hermes\//.test(userAgent)) return { name: `Aftenposten Android app`, type: 'app' };
    if (/iOS AP Hermes\//.test(userAgent)) return { name: `Aftenposten iOS app`, type: 'app' };
    if (/Android Aftonbladet Hermes\//.test(userAgent)) return { name: `Aftonbladet Android app`, type: 'app' };
    if (/iOS Aftonbladet Hermes\//.test(userAgent)) return { name: `Aftonbladet iOS app`, type: 'app' };
    if (/^Agora\//.test(userAgent)) return { name: `Agora`, type: 'app' };
    if (/^AhaRadio2\//.test(userAgent)) return { name: `AhaRadio`, type: 'app' };
    if (/^Airr(%20Beta)?\/|^Airr \(/.test(userAgent)) return { name: `Airr`, type: 'app' };
    if (/^Airsonic\//.test(userAgent)) return { name: `Airsonic`, type: 'app' };
    if (/^AlexaMediaPlayer\/[\dv]|^Echo\/|^AlexaService\/|^Alexa Mobile Voice\/|^Amazon;Echo/.test(userAgent)) return { name: `Alexa-enabled device`, type: 'app' };
    if (/^AlienBlue\//.test(userAgent)) return { name: `AlienBlue`, type: 'app' };
    if (/AllYouCanBooks/.test(userAgent)) return { name: `All You Can Books`, type: 'app' };
    if (/^AllHitMusicRadio\//.test(userAgent)) return { name: `AllHitMusicRadio`, type: 'app' };
    if (/^Aloha\//.test(userAgent)) return { name: `Aloha`, type: 'app' };
    if (/^Amazon;AF/.test(userAgent)) return { name: `Amazon Fire`, type: 'app' };
    if (/^AmazonMusic|^Harley\/\d/.test(userAgent)) return { name: `Amazon Music`, type: 'app' };
    if (/^AMPApp\//.test(userAgent)) return { name: `AMPApp`, type: 'app' };
    if (/^Anchor\//.test(userAgent)) return { name: `Anchor`, type: 'app' };
    if (/^AnchorFM\//.test(userAgent)) return { name: `AnchorFM`, type: 'app' };
    if (/\(Linux; Android \d*; MHA-AL00 Build\/HUAWEIMHA-AL00\)/.test(userAgent)) return { name: `Android Browser`, type: 'app' };
    if (/Anghami\/|^Anghami Android|^%D8%A3%D9%86%D8%BA%D8%A7%D9%85%D9%8A\//.test(userAgent)) return { name: `Anghami`, type: 'app' };
    if (/(^AntennaPod\/|^de\.danoeh\.antennapod\/|antenna\/.*CFNetwork)/.test(userAgent)) return { name: `AntennaPod`, type: 'app' };
    if (/^Anybox\//.test(userAgent)) return { name: `Anybox`, type: 'app' };
    if (/^Anytime\/.*amugofjava/.test(userAgent)) return { name: `Anytime Podcast Player`, type: 'app' };
    if (/^APKXDL/.test(userAgent)) return { name: `APK Downloader`, type: 'app' };
    if (/^Apollo\//.test(userAgent)) return { name: `Apollo`, type: 'app' };
    if (/^AirPodcasts\/\d/.test(userAgent)) return { name: `Apple HomePod`, type: 'app' };
    if (/^MessagesViewService\/|^Messages\/|^Messages Share Extension\/|^MessagesNotificationExtension\//.test(userAgent)) return { name: `Apple iMessage`, type: 'app' };
    if (/^Mail\//.test(userAgent)) return { name: `Apple Mail`, type: 'app' };
    if (/AppleNews\//.test(userAgent)) return { name: `Apple News`, type: 'app' };
    if (/^Podcasts\/.*|^Balados\/|^Podcasti\/|^Podcastit\/|^Podcasturi\/|^Podcasty\/|^Podcast’ler\/|^Podcast%E2%80%99ler\/|^Podkaster\/|^Podcaster\/.*\(.*\)|^Podcastok\/|^Подкасти\/|^Подкасты\/|^פודקאסטים\/|^البودكاست\/|^पॉडकास्ट\/|^พ็อดคาสท์\/|^播客\/|^팟캐스트\/|ポッドキャスト\/|^%D8%A7%D9%84%D8%A8%D9%88%D8%AF%D9%83%D8%A7%D8%B3%D8%AA\/|^%D0%9F%D0%BE%D0%B4%D0%BA%D0%B0%D1%81%D1%82%D1%8B\/|^%D0%9F%D0%BE%D0%B4%D0%BA%D0%B0%D1%81%D1%82%D0%B8\/|^Podcastok\/|^%D7%A4%D7%95%D7%93%D7%A7%D7%90%D7%A1%D7%98%D7%99%D7%9D\/|^%ED%8C%9F%EC%BA%90%EC%8A%A4%ED%8A%B8\/|^%D8%A7%D9%95%D8%B3%D9%85%D8%B9%D9%84%D9%8A\/|^Podcaster\/\d|^%E6%92%AD%E5%AE%A2\/|^%E3%83%9D%E3%83%83%E3%83%89%E3%82%AD%E3%83%A3%E3%82%B9%E3%83%88\/|^Podcast\/|^%E0%B8%9E%E0%B9%87%E0%B8%AD%E0%B8%94%E0%B8%84%E0%B8%B2%E0%B8%AA%E0%B8%97%E0%B9%8C\/\d|%D0%9F%D0%BE%D0%B4%D0%BA%D0%B0%D1%81%D1%82%D1%82%D0%B0%D1%80\/\d|^%E0%A4%AA%E0%A5%89%E0%A4%A1%E0%A4%95%E0%A4%BE%E0%A4%B8%E0%A5%8D%E0%A4%9F\/\d/.test(userAgent)) return { name: `Apple Podcasts`, type: 'app' };
    if (/^Recordatorios\//.test(userAgent)) return { name: `Apple Reminders`, type: 'app' };
    if (/^Arvocast\//.test(userAgent)) return { name: `Arvocast`, type: 'app' };
    if (/iOS Askoyvaringen Hermes\//.test(userAgent)) return { name: `Askoyvaringen iOS app`, type: 'app' };
    if (/^Audacious/.test(userAgent)) return { name: `Audacious`, type: 'app' };
    if (/^Radio\.com\//.test(userAgent)) return { name: `Audacy`, type: 'app' };
    if (/^com\.audials(\.paid)?\//.test(userAgent)) return { name: `Audials`, type: 'app' };
    if (/(^com\.audible\.playersdk\.player|^Audible,|^Audible.*Darwin)/.test(userAgent)) return { name: `Audible`, type: 'app' };
    if (/^Audio\//.test(userAgent)) return { name: `Audio`, type: 'app' };
    if (/^Android_AudioNow/.test(userAgent)) return { name: `Audio Now`, type: 'app' };
    if (/(^AudioWave\/1|^AudioWave iOS)/.test(userAgent)) return { name: `AudioWave`, type: 'app' };
    if (/^Aural\//.test(userAgent)) return { name: `Aural`, type: 'app' };
    if (/^Aurora\//.test(userAgent)) return { name: `Aurora`, type: 'app' };
    if (/^Autopod\//.test(userAgent)) return { name: `Autopod`, type: 'app' };
    if (/^avassetReader\//.test(userAgent)) return { name: `avassetReader`, type: 'app' };
    if (/^avopodo\//.test(userAgent)) return { name: `avopodo`, type: 'app' };
    if (/^AVPlay\//.test(userAgent)) return { name: `AVPlay`, type: 'app' };
    if (/^Awasu\//.test(userAgent)) return { name: `Awasu`, type: 'app' };
    if (/^Azul\//.test(userAgent)) return { name: `Azul`, type: 'app' };
    if (/^BaladoQuebec\//.test(userAgent)) return { name: `BaladoQuebec`, type: 'app' };
    if (/^Banter\/|^banter-beta\//.test(userAgent)) return { name: `Banter`, type: 'app' };
    if (/^Barabbas Road Church\//.test(userAgent)) return { name: `Barabbas Road Church`, type: 'app' };
    if (/^BashPodder/.test(userAgent)) return { name: `BashPodder`, type: 'app' };
    if (/BBCiPlayerRadio\//.test(userAgent)) return { name: `BBC iPlayer Radio`, type: 'app' };
    if (/BBC%20Sounds\//.test(userAgent)) return { name: `BBC Sounds`, type: 'app' };
    if (/^Bear\//.test(userAgent)) return { name: `Bear`, type: 'app' };
    if (/Android BT Hermes\//.test(userAgent)) return { name: `Bergens Tidende Android app`, type: 'app' };
    if (/iOS BT Hermes\//.test(userAgent)) return { name: `Bergens Tidende iOS app`, type: 'app' };
    if (/; BeyondPod/.test(userAgent)) return { name: `BeyondPod`, type: 'app' };
    if (/^bgwnr\//.test(userAgent)) return { name: `bgwnr`, type: 'app' };
    if (/^Bible\//.test(userAgent)) return { name: `Bible`, type: 'app' };
    if (/^Bitcast(\.fm)?\/|^bitcast 4 reel\/|^bitcastbitcast\//.test(userAgent)) return { name: `Bitcast`, type: 'app' };
    if (/^Bitly\//.test(userAgent)) return { name: `Bitly`, type: 'app' };
    if (/^BizCoachPal\//.test(userAgent)) return { name: `BizCoachPal`, type: 'app' };
    if (/^BMR\//.test(userAgent)) return { name: `BMR`, type: 'app' };
    if (/^Bolt\//.test(userAgent)) return { name: `Bolt`, type: 'app' };
    if (/^Bookmobile\//.test(userAgent)) return { name: `Bookmobile`, type: 'app' };
    if (/^Bookself\//.test(userAgent)) return { name: `Bookself`, type: 'app' };
    if (/^Boom\//.test(userAgent)) return { name: `Boom`, type: 'app' };
    if (/^Boomplay\//.test(userAgent)) return { name: `Boomplay`, type: 'app' };
    if (/^Bose\//.test(userAgent)) return { name: `Bose SoundTouch`, type: 'app' };
    if (/^bPod$/.test(userAgent)) return { name: `bPod`, type: 'app' };
    if (/^Breaker\//.test(userAgent)) return { name: `Breaker`, type: 'app' };
    if (/^breez\//.test(userAgent)) return { name: `Breez`, type: 'app' };
    if (/^BrewApp\//.test(userAgent)) return { name: `BrewApp`, type: 'app' };
    if (/^Broadcast\//.test(userAgent)) return { name: `Broadcast`, type: 'app' };
    if (/BroadwayPodcastNetwork\/iOS/.test(userAgent)) return { name: `Broadway Podcast Network`, type: 'app' };
    if (/^Browser\//.test(userAgent)) return { name: `Browser`, type: 'app' };
    if (/^browser_ios\//.test(userAgent)) return { name: `Browser iOS`, type: 'app' };
    if (/^BrowserPlus\//.test(userAgent)) return { name: `BrowserPlus`, type: 'app' };
    if (/^Bullhorn(\/.*)?$|^Bullhorn \(/.test(userAgent)) return { name: `Bullhorn`, type: 'app' };
    if (/iOS Bygdanytt Hermes\//.test(userAgent)) return { name: `Bygdanytt iOS app`, type: 'app' };
    if (/^Canvas\//.test(userAgent)) return { name: `Canvas`, type: 'app' };
    if (/^Capital\//.test(userAgent)) return { name: `Capital`, type: 'app' };
    if (/^capsule\.fm\/|^capsule-android/.test(userAgent)) return { name: `capsule.fm`, type: 'app' };
    if (/^Cast\//.test(userAgent)) return { name: `Cast`, type: 'app' };
    if (/^Castamatic\//.test(userAgent)) return { name: `Castamatic`, type: 'app' };
    if (/^Castaway\//.test(userAgent)) return { name: `Castaway`, type: 'app' };
    if (/^Cast[Bb]ox/.test(userAgent)) return { name: `CastBox`, type: 'app' };
    if (/^Casterbate\//.test(userAgent)) return { name: `Casterbate`, type: 'app' };
    if (/^castero \d/.test(userAgent)) return { name: `castero`, type: 'app' };
    if (/^castget /.test(userAgent)) return { name: `castget`, type: 'app' };
    if (/^Castro[\/ ]/.test(userAgent)) return { name: `Castro`, type: 'app' };
    if (/^Casts\//.test(userAgent)) return { name: `Casts`, type: 'app' };
    if (/^CCGF\//.test(userAgent)) return { name: `CCGF`, type: 'app' };
    if (/^CEBrowser\//.test(userAgent)) return { name: `CEBrowser`, type: 'app' };
    if (/^CFC\//.test(userAgent)) return { name: `CFC`, type: 'app' };
    if (/^CHCLeaders\//.test(userAgent)) return { name: `CHCLeaders`, type: 'app' };
    if (/^Childress\//.test(userAgent)) return { name: `Childress`, type: 'app' };
    if (/^chorus\//.test(userAgent)) return { name: `chorus`, type: 'app' };
    if (/^Christian Life Austin\//.test(userAgent)) return { name: `Christian Life Austin`, type: 'app' };
    if (/CrKey\/|\(CrKey |^Google;Chromecast/.test(userAgent)) return { name: `Chromecast device`, type: 'app' };
    if (/^ChurchLink\//.test(userAgent)) return { name: `ChurchLink`, type: 'app' };
    if (/^Clammr\//.test(userAgent)) return { name: `Clammr`, type: 'app' };
    if (/^Classic FM\//.test(userAgent)) return { name: `Classic FM`, type: 'app' };
    if (/^Client\//.test(userAgent)) return { name: `Client`, type: 'app' };
    if (/^Clementine /.test(userAgent)) return { name: `Clementine Music Player`, type: 'app' };
    if (/^Club\//.test(userAgent)) return { name: `Club`, type: 'app' };
    if (/^Commotion\//.test(userAgent)) return { name: `Commotion`, type: 'app' };
    if (/^CoolerFM\//.test(userAgent)) return { name: `Cooler`, type: 'app' };
    if (/^Copied\//.test(userAgent)) return { name: `Copied`, type: 'app' };
    if (/^CoreDataPlayerSample\//.test(userAgent)) return { name: `CoreDataPlayerSample`, type: 'app' };
    if (/^Cosmicast\//.test(userAgent)) return { name: `Cosmicast`, type: 'app' };
    if (/CPod\//.test(userAgent)) return { name: `CPod`, type: 'app' };
    if (/^Crosspoint City Church\//.test(userAgent)) return { name: `Crosspoint City Church`, type: 'app' };
    if (/^Crosspointe\//.test(userAgent)) return { name: `Crosspointe`, type: 'app' };
    if (/^CrossPreach\//.test(userAgent)) return { name: `CrossPreach`, type: 'app' };
    if (/^damus\//.test(userAgent)) return { name: `Damus`, type: 'app' };
    if (/^DataDogApp\//.test(userAgent)) return { name: `DataDogApp`, type: 'app' };
    if (/^DaumWebtoon\//.test(userAgent)) return { name: `DaumWebtoon`, type: 'app' };
    if (/be\.standaard\.audio|^DS%20Podcast\//.test(userAgent)) return { name: `De Standaard`, type: 'app' };
    if (/(^Deezer\/|^DeezerJukebox\/|^Deezer.*Electron)/.test(userAgent)) return { name: `Deezer`, type: 'app' };
    if (/^Delve\//.test(userAgent)) return { name: `Delve`, type: 'app' };
    if (/^devcasts\/.*CFNetwork/.test(userAgent)) return { name: `DevCasts`, type: 'app' };
    if (/^DManager\//.test(userAgent)) return { name: `DManager`, type: 'app' };
    if (/^Documents\//.test(userAgent)) return { name: `Documents`, type: 'app' };
    if (/DoggCatcher/.test(userAgent)) return { name: `DoggCatcher`, type: 'app' };
    if (/^Dolphini(Pad|Phone)\//.test(userAgent)) return { name: `DolphiniPad`, type: 'app' };
    if (/^doubleTwist CloudPlayer/.test(userAgent)) return { name: `doubleTwist CloudPlayer`, type: 'app' };
    if (/^Doughnut\//.test(userAgent)) return { name: `Doughnut`, type: 'app' };
    if (/Downcast\//.test(userAgent)) return { name: `Downcast`, type: 'app' };
    if (/^Downie\//.test(userAgent)) return { name: `Downie`, type: 'app' };
    if (/^DownloadAll\//.test(userAgent)) return { name: `DownloadAll`, type: 'app' };
    if (/^Downloader\//.test(userAgent)) return { name: `Downloader`, type: 'app' };
    if (/^DownloaderLite\//.test(userAgent)) return { name: `DownloaderLite`, type: 'app' };
    if (/^DownloaderSound\//.test(userAgent)) return { name: `DownloaderSound`, type: 'app' };
    if (/^Download Shuttle\//.test(userAgent)) return { name: `Download Shuttle`, type: 'app' };
    if (/^DownloadPro\//.test(userAgent)) return { name: `DownloadPro`, type: 'app' };
    if (/^Downloads\//.test(userAgent)) return { name: `Downloads`, type: 'app' };
    if (/^DownMan\//.test(userAgent)) return { name: `DownMan`, type: 'app' };
    if (/^DowntonAppy\//.test(userAgent)) return { name: `DowntonAppy`, type: 'app' };
    if (/^DriveCast\//.test(userAgent)) return { name: `DriveCast`, type: 'app' };
    if (/^DroolRadio\//.test(userAgent)) return { name: `DroolRadio`, type: 'app' };
    if (/^Dynamo\//.test(userAgent)) return { name: `Dynamo`, type: 'app' };
    if (/Android E24 Hermes\//.test(userAgent)) return { name: `E24 Android app`, type: 'app' };
    if (/iOS E24 Hermes\//.test(userAgent)) return { name: `E24 iOS app`, type: 'app' };
    if (/^Earbud\//.test(userAgent)) return { name: `Earbud`, type: 'app' };
    if (/^EasyGet\//.test(userAgent)) return { name: `EasyGet`, type: 'app' };
    if (/^TheEconomist-Darwin-/.test(userAgent)) return { name: `Economist Espresso`, type: 'app' };
    if (/^Elevation_Health\//.test(userAgent)) return { name: `Elevation Health`, type: 'app' };
    if (/^EMAudioPlayer /.test(userAgent)) return { name: `EMAudioPlayer`, type: 'app' };
    if (/^URL\/Emacs /.test(userAgent)) return { name: `Emacs`, type: 'app' };
    if (/^Encounter\//.test(userAgent)) return { name: `Encounter`, type: 'app' };
    if (/^EpisodeFever\//.test(userAgent)) return { name: `EpisodeFever`, type: 'app' };
    if (/^EQu\//.test(userAgent)) return { name: `EQu`, type: 'app' };
    if (/^EvanApp\//.test(userAgent)) return { name: `EvanApp`, type: 'app' };
    if (/^Expo\//.test(userAgent)) return { name: `Expo`, type: 'app' };
    if (/^ExtDownloader\//.test(userAgent)) return { name: `ExtDownloader`, type: 'app' };
    if (/^ExtraCloud\//.test(userAgent)) return { name: `ExtraCloud`, type: 'app' };
    if (/(iPhone|iPad).* \[FBAN|iOS\/Facebook|^FB4A\/Facebook|^facebook-mobile\/|^Facebook\/|^\[FBAN\//.test(userAgent)) return { name: `Facebook`, type: 'app' };
    if (/^CFR%20Plus\//.test(userAgent)) return { name: `faidr`, type: 'app' };
    if (/^FaithPlay FaithPlay\//.test(userAgent)) return { name: `FaithPlay`, type: 'app' };
    if (/^Fallound\//.test(userAgent)) return { name: `Fallound`, type: 'app' };
    if (/^FancyMusic\//.test(userAgent)) return { name: `FancyMusic`, type: 'app' };
    if (/^Fathom\//.test(userAgent)) return { name: `Fathom`, type: 'app' };
    if (/^Feeder\//.test(userAgent)) return { name: `Feeder`, type: 'app' };
    if (/^feedly\//.test(userAgent)) return { name: `Feedly`, type: 'app' };
    if (/^FeedStation\/\d/.test(userAgent)) return { name: `FeedStation`, type: 'app' };
    if (/^Fellowship Bible Church Topeka\//.test(userAgent)) return { name: `Fellowship Bible Church Topeka`, type: 'app' };
    if (/^Filebox\//.test(userAgent)) return { name: `Filebox`, type: 'app' };
    if (/^FileBrowser\//.test(userAgent)) return { name: `FileBrowser`, type: 'app' };
    if (/^Filer\//.test(userAgent)) return { name: `Filer`, type: 'app' };
    if (/^Files\//.test(userAgent)) return { name: `Files`, type: 'app' };
    if (/^FilesPro\//.test(userAgent)) return { name: `FilesPro`, type: 'app' };
    if (/^Fili\//.test(userAgent)) return { name: `Fili`, type: 'app' };
    if (/(^MAC |^WIN )/.test(userAgent)) return { name: `Flash`, type: 'app' };
    if (/^folkebladet\.no\//.test(userAgent)) return { name: `folkebladet.no`, type: 'app' };
    if (/^foobar2000\//.test(userAgent)) return { name: `foobar2000`, type: 'app' };
    if (/^Fountain|^fountainapp\/\d/.test(userAgent)) return { name: `Fountain`, type: 'app' };
    if (/^FDM\/|^FDM \d/.test(userAgent)) return { name: `Free Download Manager`, type: 'app' };
    if (/^FreeMP3MusicDownload\//.test(userAgent)) return { name: `FreeMP3MusicDownload`, type: 'app' };
    if (/^freemusic\//.test(userAgent)) return { name: `freemusic`, type: 'app' };
    if (/^FreeMusicDownloadPro\//.test(userAgent)) return { name: `FreeMusicDownloadPro`, type: 'app' };
    if (/^FreeMusicPlusFree\//.test(userAgent)) return { name: `FreeMusicPlusFree`, type: 'app' };
    if (/^FrequencePlus\//.test(userAgent)) return { name: `Fréquence Plus`, type: 'app' };
    if (/^GaanaAndroid-|^Gaana-iOS|^Gaana\//.test(userAgent)) return { name: `Gaana`, type: 'app' };
    if (/^Garmin fenix 5X Plus/.test(userAgent)) return { name: `Garmin fenix 5X`, type: 'app' };
    if (/^Garmin Forerunner/.test(userAgent)) return { name: `Garmin Forerunner`, type: 'app' };
    if (/^GBEngine\//.test(userAgent)) return { name: `GBEngine`, type: 'app' };
    if (/^GMB Show\//.test(userAgent)) return { name: `GMB Show`, type: 'app' };
    if (/^Godster\//.test(userAgent)) return { name: `Godster`, type: 'app' };
    if (/^Gold\//.test(userAgent)) return { name: `Gold`, type: 'app' };
    if (/^GoldenPod\//.test(userAgent)) return { name: `GoldenPod`, type: 'app' };
    if (/^GoLoud\//.test(userAgent)) return { name: `GoLoud`, type: 'app' };
    if (/Goodpods\.|^[Gg]oodpods\//.test(userAgent)) return { name: `Goodpods`, type: 'app' };
    if (/^GoodReader(4|IPad)?\//.test(userAgent)) return { name: `GoodReader`, type: 'app' };
    if (/^Google-Speech-Actions/.test(userAgent)) return { name: `Google Assistant`, type: 'app' };
    if (/(Fuchsia).* CrKey\//.test(userAgent)) return { name: `Google Nest Hub`, type: 'app' };
    if (/(GoogleChirp|^GooglePodcasts\/|^Podcasts$|GSA\/)/.test(userAgent)) return { name: `Google Podcasts`, type: 'app' };
    if (/^gPodder\/|^gpodder\.net|gpodder/.test(userAgent)) return { name: `gPodder`, type: 'app' };
    if (/^Grace%20Community%20Church%20-%20Texas\//.test(userAgent)) return { name: `Grace Community Church - Texas`, type: 'app' };
    if (/^Grace%20Evangelical%20Covenant%20Church\//.test(userAgent)) return { name: `Grace Evangelical Covenant Church`, type: 'app' };
    if (/^Gretale\//.test(userAgent)) return { name: `Gretale`, type: 'app' };
    if (/^GroupMe\//.test(userAgent)) return { name: `GroupMe`, type: 'app' };
    if (/^Guardian-iOSLive\/|GuardianAndroidApp\/|^Guardian Podcast/.test(userAgent)) return { name: `Guardian`, type: 'app' };
    if (/^Guacamole\//.test(userAgent)) return { name: `Guacamole`, type: 'app' };
    if (/^GrabRadioWorld\//.test(userAgent)) return { name: `GrabRadioWorld`, type: 'app' };
    if (/^HalfTunes\//.test(userAgent)) return { name: `HalfTunes`, type: 'app' };
    if (/^Hammel\//.test(userAgent)) return { name: `Hammel`, type: 'app' };
    if (/^HardCast\//.test(userAgent)) return { name: `HardCast`, type: 'app' };
    if (/^Hark\//.test(userAgent)) return { name: `Hark Audio`, type: 'app' };
    if (/^Heart\//.test(userAgent)) return { name: `Heart`, type: 'app' };
    if (/hermespod\.com\//.test(userAgent)) return { name: `HermesPod`, type: 'app' };
    if (/^HiCast\//.test(userAgent)) return { name: `HiCast`, type: 'app' };
    if (/^Highly\//.test(userAgent)) return { name: `Highly`, type: 'app' };
    if (/^Himalaya(_test)?\//.test(userAgent)) return { name: `Himalaya`, type: 'app' };
    if (/^HopeChurchCleburne\//.test(userAgent)) return { name: `HopeChurchCleburne`, type: 'app' };
    if (/^HRN\//.test(userAgent)) return { name: `Horse Radio Network`, type: 'app' };
    if (/HubbardApp\//.test(userAgent)) return { name: `Hubbard Radio`, type: 'app' };
    if (/^Hubhopper$/.test(userAgent)) return { name: `Hubhopper`, type: 'app' };
    if (/^Hyper\//.test(userAgent)) return { name: `Hyper`, type: 'app' };
    if (/^HyperCatcher/.test(userAgent)) return { name: `HyperCatcher`, type: 'app' };
    if (/^iBuilder\//.test(userAgent)) return { name: `iBuilder`, type: 'app' };
    if (/^i[Cc]atcher|\(iCatcher/.test(userAgent)) return { name: `iCatcher`, type: 'app' };
    if (/^iDL\//.test(userAgent)) return { name: `iDL`, type: 'app' };
    if (/IDownloaderApps4StarsFree\/|^IDownloaderFree_Apps4Stars\/|^iDownloader/.test(userAgent)) return { name: `iDownloader`, type: 'app' };
    if (/^iDownloadsAppPlus\//.test(userAgent)) return { name: `iDownloadsAppPlus`, type: 'app' };
    if (/^iFeedTouch\//.test(userAgent)) return { name: `iFeedTouch`, type: 'app' };
    if (/Iframely\//.test(userAgent)) return { name: `Iframely`, type: 'app' };
    if (/^IFTTT\//.test(userAgent)) return { name: `IFTTT`, type: 'app' };
    if (/^iHeartRadio\/|^iHeartPodcasts\//.test(userAgent)) return { name: `iHeartRadio`, type: 'app' };
    if (/^iHorror\//.test(userAgent)) return { name: `iHorror`, type: 'app' };
    if (/^InCast\//.test(userAgent)) return { name: `InCast`, type: 'app' };
    if (/^Instacast Instacast\/|^Instacast\//.test(userAgent)) return { name: `Instacast`, type: 'app' };
    if (/^Instagram\/|Mobile\/.* Instagram/.test(userAgent)) return { name: `Instagram`, type: 'app' };
    if (/^iOnGreenville\//.test(userAgent)) return { name: `iOnGreenville`, type: 'app' };
    if (/^IOSAudiobooks\//.test(userAgent)) return { name: `IOSAudiobooks`, type: 'app' };
    if (/^IPF\//.test(userAgent)) return { name: `IPF`, type: 'app' };
    if (/^iPlay\//.test(userAgent)) return { name: `iPlay`, type: 'app' };
    if (/^isitgood\//.test(userAgent)) return { name: `isitgood`, type: 'app' };
    if (/^iTunesU?[\/-]/.test(userAgent)) return { name: `iTunes`, type: 'app' };
    if (/^[iI][Vv]oox/.test(userAgent)) return { name: `iVoox`, type: 'app' };
    if (/^iWeb\//.test(userAgent)) return { name: `iWeb`, type: 'app' };
    if (/^Jabbercast\//.test(userAgent)) return { name: `Jabbercast`, type: 'app' };
    if (/^Jam\/\d.*listentojam/.test(userAgent)) return { name: `Jam`, type: 'app' };
    if (/^Jimcast\//.test(userAgent)) return { name: `Jimcast`, type: 'app' };
    if (/(^com\.jio\.media\.jiobeats|^com\.saavn\.android|^[sS]aavn)/.test(userAgent)) return { name: `JioSaavn`, type: 'app' };
    if (/J\. River Internet Reader/.test(userAgent)) return { name: `JRiver Media Center`, type: 'app' };
    if (/^Juice\//.test(userAgent)) return { name: `Juice`, type: 'app' };
    if (/just_audio\//.test(userAgent)) return { name: `Just Audio`, type: 'app' };
    if (/ Kajabi|KajabiPodcast/.test(userAgent)) return { name: `Kajabi`, type: 'app' };
    if (/^KakaoTalk\//.test(userAgent)) return { name: `KakaoTalk`, type: 'app' };
    if (/^KaoticRadio\.com\//.test(userAgent)) return { name: `KaoticRadio.com`, type: 'app' };
    if (/^Kasts\/|^kasts /.test(userAgent)) return { name: `Kasts`, type: 'app' };
    if (/^Kids(%20| )Listen\//.test(userAgent)) return { name: `Kids Listen`, type: 'app' };
    if (/^KidspodMobileClient\//.test(userAgent)) return { name: `KidsPod`, type: 'app' };
    if (/^KKBOX\//.test(userAgent)) return { name: `KKBOX`, type: 'app' };
    if (/^Kloudie\//.test(userAgent)) return { name: `Kloudie`, type: 'app' };
    if (/^Knomad\//.test(userAgent)) return { name: `Knomad`, type: 'app' };
    if (/^Kodi\//.test(userAgent)) return { name: `Kodi`, type: 'app' };
    if (/^KREAFUNK\//.test(userAgent)) return { name: `KREAFUNK`, type: 'app' };
    if (/^labs\//.test(userAgent)) return { name: `labs`, type: 'app' };
    if (/^Laughable.+iOS|^Laughable\//.test(userAgent)) return { name: `Laughable`, type: 'app' };
    if (/^LBC\//.test(userAgent)) return { name: `LBC`, type: 'app' };
    if (/^Leaf\//.test(userAgent)) return { name: `Leaf`, type: 'app' };
    if (/(^lesindesradios$|^lesindesradios\/)/.test(userAgent)) return { name: `Les Indés Radios`, type: 'app' };
    if (/LG Player/.test(userAgent)) return { name: `LG Player`, type: 'app' };
    if (/^Life(%20)?Essentials(App)?\//.test(userAgent)) return { name: `LifeEssentials`, type: 'app' };
    if (/^lifegateburleson\//.test(userAgent)) return { name: `lifegateburleson`, type: 'app' };
    if (/AppleWebKit.+\[LinkedInApp\]|^LinkedIn\//.test(userAgent)) return { name: `LinkedIn`, type: 'app' };
    if (/Lisny/.test(userAgent)) return { name: `Lisny`, type: 'app' };
    if (/^Listen(( |%20)App)?\//.test(userAgent)) return { name: `Listen`, type: 'app' };
    if (/^Liulo\//.test(userAgent)) return { name: `Liulo`, type: 'app' };
    if (/Listen5/.test(userAgent)) return { name: `Listen5`, type: 'app' };
    if (/^Livio Radio\//.test(userAgent)) return { name: `Livio Radio`, type: 'app' };
    if (/^Luminary(Preprod)?\/|^luminary\.next\//.test(userAgent)) return { name: `Luminary`, type: 'app' };
    if (/^MacJournal\//.test(userAgent)) return { name: `MacJournal`, type: 'app' };
    if (/^MajelanApp/.test(userAgent)) return { name: `Majelan`, type: 'app' };
    if (/^MaxTubePro\//.test(userAgent)) return { name: `MaxTubePro`, type: 'app' };
    if (/^Meadowbrook Church\//.test(userAgent)) return { name: `Meadowbrook Church`, type: 'app' };
    if (/^MediaMonkey/.test(userAgent)) return { name: `MediaMonkey`, type: 'app' };
    if (/^Mediatap\//.test(userAgent)) return { name: `Mediatap`, type: 'app' };
    if (/^Megaphone\.fm/.test(userAgent)) return { name: `Megaphone`, type: 'app' };
    if (/^Menucast\//.test(userAgent)) return { name: `Menucast`, type: 'app' };
    if (/^Message\+\//.test(userAgent)) return { name: `Message+`, type: 'app' };
    if (/^Messenger\//.test(userAgent)) return { name: `Messenger`, type: 'app' };
    if (/^Metacast(\/.*)?$/.test(userAgent)) return { name: `Metacast`, type: 'app' };
    if (/^Outlook-Android\/|^Microsoft Office\/.*?Microsoft Outlook/.test(userAgent)) return { name: `Microsoft Outlook`, type: 'app' };
    if (/^microsoft;xbox_/.test(userAgent)) return { name: `Microsoft Xbox`, type: 'app' };
    if (/^Mimir(-macOS)?\//.test(userAgent)) return { name: `Mimir`, type: 'app' };
    if (/^Miro\/.+Windows/.test(userAgent)) return { name: `Miro`, type: 'app' };
    if (/^Mixcloud\//.test(userAgent)) return { name: `Mixcloud`, type: 'app' };
    if (/^MixerBox(%20Pro)?\//.test(userAgent)) return { name: `MixerBox`, type: 'app' };
    if (/^MobileApp\//.test(userAgent)) return { name: `MobileApp`, type: 'app' };
    if (/^MobileSMS\//.test(userAgent)) return { name: `MobileSMS`, type: 'app' };
    if (/^Moon ?FM\//.test(userAgent)) return { name: `MoonFM`, type: 'app' };
    if (/^mowPod\//.test(userAgent)) return { name: `mowPod`, type: 'app' };
    if (/^MPlayer \d/.test(userAgent)) return { name: `MPlayer`, type: 'app' };
    if (/^mpv 0\.|^libmpv$/.test(userAgent)) return { name: `mpv`, type: 'app' };
    if (/^MusicBee/.test(userAgent)) return { name: `MusicBee`, type: 'app' };
    if (/^Music%20Download\//.test(userAgent)) return { name: `Music Download App`, type: 'app' };
    if (/^myTuner Radio app\/|^myTuner%20Radio%20app\/|^mytuner_podcasts_androidplayer\/|^MyTuner-|^myTuner$|^myTuneriOS%20Free\//.test(userAgent)) return { name: `MyTuner`, type: 'app' };
    if (/^Newsboat\//.test(userAgent)) return { name: `Newsboat`, type: 'app' };
    if (/^Newsly/.test(userAgent)) return { name: `Newsly`, type: 'app' };
    if (/^NPR\/|^NPR%20One\/|^NPROneAndroid|nprone_android\//.test(userAgent)) return { name: `NPR`, type: 'app' };
    if (/^NRC( |%20)Audio\//.test(userAgent)) return { name: `NRC Audio`, type: 'app' };
    if (/nl\.nrc\.nrcapp|^NRC-Nieuws\/|com\.twipemobile\.nrc/.test(userAgent)) return { name: `NRC`, type: 'app' };
    if (/^Outcast[\/ ]/.test(userAgent)) return { name: `Outcast`, type: 'app' };
    if (/^Overcast\/|^Overcast.*Apple Watch/.test(userAgent)) return { name: `Overcast`, type: 'app' };
    if (/^Podcast Overhaul\//.test(userAgent)) return { name: `Overhaul`, type: 'app' };
    if (/^Palco MP3/.test(userAgent)) return { name: `Palco MP3`, type: 'app' };
    if (/(^Pandora\/| Pandora\/)/.test(userAgent)) return { name: `Pandora`, type: 'app' };
    if (/^Parler( Staging)?\//.test(userAgent)) return { name: `Parler`, type: 'app' };
    if (/^PeaCast\//.test(userAgent)) return { name: `PeaCast`, type: 'app' };
    if (/^Playapod/.test(userAgent)) return { name: `Playapod`, type: 'app' };
    if (/^Player FM|^Player%20FM|^Alpha%20PlayerFM\//.test(userAgent)) return { name: `Player FM`, type: 'app' };
    if (/^Pocket Casts|^PocketCasts\/|^Shifty Jelly Pocket Casts/.test(userAgent)) return { name: `Pocket Casts`, type: 'app' };
    if (/^Podbay\//.test(userAgent)) return { name: `Podbay`, type: 'app' };
    if (/^Podbean\//.test(userAgent)) return { name: `Podbean`, type: 'app' };
    if (/^PodcastGuru/.test(userAgent)) return { name: `Podcast Guru`, type: 'app' };
    if (/^Podcast.*Addict\/|^Podcast Addict /.test(userAgent)) return { name: `Podcast Addict`, type: 'app' };
    if (/janwh\/podcast-archiver/.test(userAgent)) return { name: `Podcast Archiver`, type: 'app' };
    if (/^Podcast Player\//.test(userAgent)) return { name: `Podcast Player`, type: 'app' };
    if (/^PodcastRepublic\//.test(userAgent)) return { name: `Podcast Republic`, type: 'app' };
    if (/^Podcastly\/|^Podcastly$/.test(userAgent)) return { name: `Podcastly`, type: 'app' };
    if (/^Podchaser |^Podchaser-Parser/.test(userAgent)) return { name: `Podchaser`, type: 'app' };
    if (/^Podclipper\//.test(userAgent)) return { name: `Podclipper`, type: 'app' };
    if (/^Podcoin/.test(userAgent)) return { name: `Podcoin`, type: 'app' };
    if (/^PodCruncher\/.* CFNetwork\//.test(userAgent)) return { name: `PodCruncher`, type: 'app' };
    if (/poddl - podcast downloader/.test(userAgent)) return { name: `poddl - podcast downloader`, type: 'app' };
    if (/^Podeo\//.test(userAgent)) return { name: `Podeo`, type: 'app' };
    if (/^Podfriend/.test(userAgent)) return { name: `Podfriend`, type: 'app' };
    if (/^Podgrab /.test(userAgent)) return { name: `Podgrab`, type: 'app' };
    if (/^Podhero|^Swoot[\/ ]/.test(userAgent)) return { name: `Podhero`, type: 'app' };
    if (/^Podimo\//.test(userAgent)) return { name: `Podimo`, type: 'app' };
    if (/.*PodKast$/.test(userAgent)) return { name: `PodKast app`, type: 'app' };
    if (/^Podkicker/.test(userAgent)) return { name: `Podkicker Pro`, type: 'app' };
    if (/PodLink/.test(userAgent)) return { name: `PodLink`, type: 'app' };
    if (/.*PodLP\//.test(userAgent)) return { name: `PodLP podcast app for KaiOS`, type: 'app' };
    if (/^Podme android app\/|^PodMe\//.test(userAgent)) return { name: `PodMe`, type: 'app' };
    if (/^PodMN\//.test(userAgent)) return { name: `PodMN`, type: 'app' };
    if (/^PodNL\//.test(userAgent)) return { name: `PodNL`, type: 'app' };
    if (/podnods-player/.test(userAgent)) return { name: `Podnods`, type: 'app' };
    if (/^Podopolo|^podopolo\//.test(userAgent)) return { name: `Podopolo`, type: 'app' };
    if (/^Podplay\//.test(userAgent)) return { name: `Podplay`, type: 'app' };
    if (/felixwatts\/PodPuppy/.test(userAgent)) return { name: `PodPuppy`, type: 'app' };
    if (/^PodQast\//.test(userAgent)) return { name: `PodQast`, type: 'app' };
    if (/^Pods\//.test(userAgent)) return { name: `Pods`, type: 'app' };
    if (/^Podurama/.test(userAgent)) return { name: `Podurama`, type: 'app' };
    if (/^PodTrapper/.test(userAgent)) return { name: `PodTrapper`, type: 'app' };
    if (/^Podvine\/\d/.test(userAgent)) return { name: `Podvine`, type: 'app' };
    if (/^[Pp]odverse\//.test(userAgent)) return { name: `Podverse`, type: 'app' };
    if (/Podyssey App|com\.toysinboxes\.Echo|fm\.podyssey\.podcasts|^Podyssey/.test(userAgent)) return { name: `Podyssey`, type: 'app' };
    if (/Pro[Cc]ast/.test(userAgent)) return { name: `ProCast`, type: 'app' };
    if (/^PugpigBolt /.test(userAgent)) return { name: `PugPig Bolt`, type: 'app' };
    if (/^pypodder$/.test(userAgent)) return { name: `Pypodder`, type: 'app' };
    if (/^Podcast Provider.*?Radio Downloader/.test(userAgent)) return { name: `Radio Downloader`, type: 'app' };
    if (/^(radio\.[a-z]{2,3}|GetPodcast)[ \/]\d/.test(userAgent)) return { name: `radio.de`, type: 'app' };
    if (/^Radioline%202\/|^Radioline$/.test(userAgent)) return { name: `Radioline`, type: 'app' };
    if (/(^Radioplayer Android app|^Radioplayer iOS app)/.test(userAgent)) return { name: `RadioPlayer`, type: 'app' };
    if (/^RadioPublic\/android-|^RadioPublic Android|RadioPublic iOS|RadioPublic.+CFNetwork|^RadioPublic\/iOS|^RadioPublicDraper\//.test(userAgent)) return { name: `RadioPublic`, type: 'app' };
    if (/^Reeder\//.test(userAgent)) return { name: `Reeder`, type: 'app' };
    if (/(^Repod\/.+iOS|^Repod\/.+Android)/.test(userAgent)) return { name: `Repod`, type: 'app' };
    if (/^Roka Stereo\//.test(userAgent)) return { name: `Roka Stereo`, type: 'app' };
    if (/^Roku\//.test(userAgent)) return { name: `Roku`, type: 'app' };
    if (/(^gvfs\/|^rhythmbox\/)/.test(userAgent)) return { name: `Rhythmbox`, type: 'app' };
    if (/^RSSRadio/.test(userAgent)) return { name: `RSS Radio`, type: 'app' };
    if (/com\.meecel\.feedreader\.RssDemonAd/.test(userAgent)) return { name: `RSSDemon`, type: 'app' };
    if (/^RSSOwl.*Windows/.test(userAgent)) return { name: `RSSOwl`, type: 'app' };
    if (/RTL\+/.test(userAgent)) return { name: `RTL+`, type: 'app' };
    if (/^SachNoi\.app\/|^SachNoiApp\//.test(userAgent)) return { name: `SachNoi`, type: 'app' };
    if (/^sp-agent/.test(userAgent)) return { name: `Samsung Podcasts`, type: 'app' };
    if (/^ServeStream Dynamo\/|^ServeStream$/.test(userAgent)) return { name: `ServeStream`, type: 'app' };
    if (/^Shadow/.test(userAgent)) return { name: `Shadow`, type: 'app' };
    if (/^SiriusXM\//.test(userAgent)) return { name: `SiriusXM`, type: 'app' };
    if (/^Slack\//.test(userAgent)) return { name: `Slack`, type: 'app' };
    if (/^Snipd\//.test(userAgent)) return { name: `Snipd`, type: 'app' };
    if (/s~snapchat-proxy/.test(userAgent)) return { name: `Snapchat`, type: 'app' };
    if (/^Sodes\//.test(userAgent)) return { name: `Sodes`, type: 'app' };
    if (/(Sonnet|^Simple Podcast Player)/.test(userAgent)) return { name: `Sonnet`, type: 'app' };
    if (/^sony_tv;ps5;/.test(userAgent)) return { name: `Sony PlayStation 5`, type: 'app' };
    if (/Sonos/.test(userAgent)) return { name: `Sonos`, type: 'app' };
    if (/^SoundOn\//.test(userAgent)) return { name: `SoundOn`, type: 'app' };
    if (/^SoundWaves-\d/.test(userAgent)) return { name: `SoundWaves`, type: 'app' };
    if (/Android Sportbladet Hermes\//.test(userAgent)) return { name: `Sportbladet Android app`, type: 'app' };
    if (/iOS Sportbladet Hermes\//.test(userAgent)) return { name: `Sportbladet iOS app`, type: 'app' };
    if (/^Spotify\/.+Linux|Macintosh.+Spotify\/|^Spotify\/.+OSX|Windows.+Spotify\/|^Spotify\/.+Win32|^Spotify\/.+Android|^Spotify\/.+iOS|^Spotify\/.+Polestar|^Spotify\/.+Volvo|^spotify_|^Spotify-Lite|^Spotify\/\d/.test(userAgent)) return { name: `Spotify`, type: 'app' };
    if (/(^Spreaker for Android|Spreaker\/)/.test(userAgent)) return { name: `Spreaker`, type: 'app' };
    if (/Android SA Hermes\//.test(userAgent)) return { name: `Stavanger Aftenblad Android app`, type: 'app' };
    if (/iOS SA Hermes\//.test(userAgent)) return { name: `Stavanger Aftenblad iOS app`, type: 'app' };
    if (/^Stitcher\/|^Stitcher Demo\/|^AlexaMediaPlayer\/Stitcher/.test(userAgent)) return { name: `Stitcher`, type: 'app' };
    if (/^Stoler(%20| )Report\//.test(userAgent)) return { name: `Stoler Report`, type: 'app' };
    if (/^Storiyoh\//.test(userAgent)) return { name: `Storiyoh`, type: 'app' };
    if (/^Storybutton\//.test(userAgent)) return { name: `Storybutton`, type: 'app' };
    if (/^StoryShots\//.test(userAgent)) return { name: `StoryShots`, type: 'app' };
    if (/iOS Strilen Hermes\//.test(userAgent)) return { name: `Strilen iOS app`, type: 'app' };
    if (/^Subcast/.test(userAgent)) return { name: `Subcast`, type: 'app' };
    if (/^Substack\//.test(userAgent)) return { name: `Substack`, type: 'app' };
    if (/iOS SvD Hermes\//.test(userAgent)) return { name: `Svenska Dagbladet iOS app`, type: 'app' };
    if (/SvD Hermes\//.test(userAgent)) return { name: `Svenska Dagbladet Android app`, type: 'app' };
    if (/^Swinsian\//.test(userAgent)) return { name: `Swinsian`, type: 'app' };
    if (/^SYOK|^my\.com\.astro\.player/.test(userAgent)) return { name: `SYOK`, type: 'app' };
    if (/^TED |^TED\//.test(userAgent)) return { name: `TED`, type: 'app' };
    if (/^The God Minute\//.test(userAgent)) return { name: `The God Minute`, type: 'app' };
    if (/(^lamarr-iOS|^TheEconomist-Lamarr-ios|^TheEconomist-Lamarr-iOS|^lamarr-android|^TheEconomist-Lamarr-android)/.test(userAgent)) return { name: `The Economist`, type: 'app' };
    if (/^ThePodcastApp|iOS.*The Podcast App\/|com\.evolve\.podcast\/|^podcast\/\d* |^PodcastApp\/\d/.test(userAgent)) return { name: `The Podcast App`, type: 'app' };
    if (/ Thunderbird\//.test(userAgent)) return { name: `Mozilla Thunderbird`, type: 'app' };
    if (/musical_ly/.test(userAgent)) return { name: `TikTok`, type: 'app' };
    if (/^TREBLE\//.test(userAgent)) return { name: `Treble`, type: 'app' };
    if (/^Tumult/.test(userAgent)) return { name: `Tumult`, type: 'app' };
    if (/^TuneIn| TuneIn\//.test(userAgent)) return { name: `TuneIn`, type: 'app' };
    if (/^(Turtlecast|TURTLECAST)\//.test(userAgent)) return { name: `Turtlecast`, type: 'app' };
    if (/^Twitter(Android)?\/| Twitter for i/.test(userAgent)) return { name: `Twitter`, type: 'app' };
    if (/^Tweetbot\//.test(userAgent)) return { name: `Tweetbot`, type: 'app' };
    if (/^Ubook Player/.test(userAgent)) return { name: `Ubook Player`, type: 'app' };
    if (/^uTorrent|BTWebClient/.test(userAgent)) return { name: `uTorrent`, type: 'app' };
    if (/iOS Vestnytt Hermes\//.test(userAgent)) return { name: `Vestnytt iOS app`, type: 'app' };
    if (/Android VG Hermes\//.test(userAgent)) return { name: `VG Android app`, type: 'app' };
    if (/iOS VG Hermes\//.test(userAgent)) return { name: `VG iOS app`, type: 'app' };
    if (/^VictorReader Stream|^VictorReader_/.test(userAgent)) return { name: `VictorReader`, type: 'app' };
    if (/^VLC\/\d/.test(userAgent)) return { name: `VLC media player`, type: 'app' };
    if (/^Vodacast/.test(userAgent)) return { name: `Vodacast`, type: 'app' };
    if (/^Voiz FM\//.test(userAgent)) return { name: `Voiz FM`, type: 'app' };
    if (/^Winamp/.test(userAgent)) return { name: `Winamp`, type: 'app' };
    if (/^WeCast\//.test(userAgent)) return { name: `WeCast`, type: 'app' };
    if (/^WhatsApp\//.test(userAgent)) return { name: `WhatsApp`, type: 'app' };
    if (/^NSPlayer|WMPlayer\/|^Windows-Media-Player\//.test(userAgent)) return { name: `Windows Media Player`, type: 'app' };
    if (/^WynkMusic\//.test(userAgent)) return { name: `WynkMusic`, type: 'app' };
    if (/^Xiaoyuzhou\//.test(userAgent)) return { name: `Xiao Yu Zhou`, type: 'app' };
    if (/iPhone.*XING/.test(userAgent)) return { name: `XING`, type: 'app' };
    if (/^Ya(ndex)?\.Music\//.test(userAgent)) return { name: `Yandex Music`, type: 'app' };
    if (/^yapa\//.test(userAgent)) return { name: `Yapa`, type: 'app' };
    if (/^com\.google\.android\.apps\.youtube\.music\/|^YouTubeMusic\/\d/.test(userAgent)) return { name: `YouTube Music`, type: 'app' };
    if (/^app\.revanced\.android\.apps\.youtube\.music\//.test(userAgent)) return { name: `YouTube Music (ReVanced)`, type: 'app' };
    if (/^Zeno$/.test(userAgent)) return { name: `Zeno`, type: 'app' };
    if (/Zune\//.test(userAgent)) return { name: `Zune`, type: 'app' };
    if (/^Podcast\/1\./.test(userAgent)) return { name: `小宇宙`, type: 'app' };
    if (/.*KAIOS\//.test(userAgent)) return { name: `KAIOS podcast app`, type: 'app' };
    if (/^talkS(PORT|port)\//.test(userAgent)) return { name: `talkSPORT app`, type: 'app' };
    if (/^Times(%20|\s)Radio/.test(userAgent)) return { name: `Times Radio app`, type: 'app' };
    if (/^Virgin(%20|\s)Radio/.test(userAgent)) return { name: `Virgin Radio app`, type: 'app' };
    if (/^Global Player\//.test(userAgent)) return { name: `Global Player`, type: 'app' };

    // libraries
    if (/^AndroidDownloadManager/.test(userAgent)) return { name: `AndroidDownloadManager`, type: 'library' };
    if (/Apache-HttpClient/.test(userAgent)) return { name: `Apache HttpClient`, type: 'library', category: 'bot' };
    if (/^AppleCoreMedia\/1/.test(userAgent)) return { name: `AppleCoreMedia`, type: 'library' };
    if (/^aria2\//.test(userAgent)) return { name: `aria2`, type: 'library', category: 'bot' };
    if (/^Armadillo\/1/.test(userAgent)) return { name: `Armadillo`, type: 'library' };
    if (/^AHC\/\d+\.\d+/.test(userAgent)) return { name: `Async Http Client (java)`, type: 'library', category: 'bot' };
    if (/^axios\//.test(userAgent)) return { name: `Axios (Node)`, type: 'library', category: 'bot' };
    if (/^Bun\/\d/.test(userAgent)) return { name: `Bun`, type: 'library', category: 'bot' };
    if (/^CarrierWave\//.test(userAgent)) return { name: `CarrierWave (ruby)`, type: 'library', category: 'bot' };
    if (/github\.com\/gocolly/.test(userAgent)) return { name: `Colly`, type: 'library', category: 'bot' };
    if (/^Dalvik[\/ ]/.test(userAgent)) return { name: `Dalvik`, type: 'library' };
    if (/^Dart\//.test(userAgent)) return { name: `Dart`, type: 'library', category: 'bot' };
    if (/^Deno\//.test(userAgent)) return { name: `Deno`, type: 'library', category: 'bot' };
    if (/^Down\/\d/.test(userAgent)) return { name: `Down (ruby)`, type: 'library', category: 'bot' };
    if (/^Lavf\//.test(userAgent)) return { name: `ffmpeg`, type: 'library', category: 'bot' };
    if (/^FileDownloader\//.test(userAgent)) return { name: `FileDownloader (Android)`, type: 'library' };
    if (/^git-annex/.test(userAgent)) return { name: `git-annex`, type: 'library', category: 'bot' };
    if (/^Go-http-client/.test(userAgent)) return { name: `Go Http Client`, type: 'library', category: 'bot' };
    if (/^got(\/| \()/.test(userAgent)) return { name: `Got (node)`, type: 'library', category: 'bot' };
    if (/^GStreamer|GStreamer\//.test(userAgent)) return { name: `GStreamer`, type: 'library' };
    if (/^GuzzleHttp/.test(userAgent)) return { name: `Guzzle`, type: 'library', category: 'bot' };
    if (/^gvfs/.test(userAgent)) return { name: `gvfs`, type: 'library' };
    if (/^hackney\/\d/.test(userAgent)) return { name: `hackney (elixir)`, type: 'library', category: 'bot' };
    if (/^HTTP-Tiny\//.test(userAgent)) return { name: `HTTP:Tiny`, type: 'library', category: 'bot' };
    if (/KaiOS Downloader/.test(userAgent)) return { name: `KaiOS Downloader`, type: 'library' };
    if (/^libsoup\//.test(userAgent)) return { name: `libsoup`, type: 'library' };
    if (/^Android\.LVLDM$/.test(userAgent)) return { name: `Android License Verification Library`, type: 'library' };
    if (/^node-fetch(\/.*)?$/.test(userAgent)) return { name: `node-fetch`, type: 'library', category: 'bot' };
    if (/okhttp/.test(userAgent)) return { name: `okhttp`, type: 'library', category: 'bot' };
    if (/^PRDownloader$/.test(userAgent)) return { name: `PRDownloader`, type: 'library' };
    if (/^python-httpx\//.test(userAgent)) return { name: `python-httpx`, type: 'library', category: 'bot' };
    if (/^react-native-track-player\//.test(userAgent)) return { name: `react-native-track-player`, type: 'library' };
    if (/request\.js/.test(userAgent)) return { name: `Request (node)`, type: 'library', category: 'bot' };
    if (/^reqwest\/\d/.test(userAgent)) return { name: `reqwest (rust)`, type: 'library' };
    if (/^resty-requests/.test(userAgent)) return { name: `resty-requests (lua)`, type: 'library', category: 'bot' };
    if (/^Ruby/.test(userAgent)) return { name: `ruby`, type: 'library' };
    if (/^rest-client\/.*ruby\//.test(userAgent)) return { name: `rest-client (ruby)`, type: 'library', category: 'bot' };
    if (/^SafariViewService\//.test(userAgent)) return { name: `Safari View Service (SFSafariViewController)`, type: 'library' };
    if (/^Scrapy\//.test(userAgent)) return { name: `Scrapy (python)`, type: 'library', category: 'bot' };
    if (/stagefright\//.test(userAgent)) return { name: `stagefright`, type: 'library' };
    if (/^Symfony HttpClient\//.test(userAgent)) return { name: `Symfony (php)`, type: 'library', category: 'bot' };
    if (/^undici$/.test(userAgent)) return { name: `undici (node)`, type: 'library', category: 'bot' };
    if (/^(Python-urllib|python-urllib3)\//.test(userAgent)) return { name: `urllib (python)`, type: 'library', category: 'bot' };
    if (/ ExoPlayerLib\//.test(userAgent)) return { name: `ExoPlayer (Android)`, type: 'library' };
    if (/^ESP32 HTTP Client\//.test(userAgent)) return { name: `ESP32 HTTP Client`, type: 'library' };

    // browsers
    if (/.+[Bb]rave/.test(userAgent)) return { name: `Brave`, type: 'browser' };
    if (/Opera\/|Macintosh.*OPR\/|Windows.*OPR\/|Mobile\/.* OPT\//.test(userAgent)) return { name: `Opera`, type: 'browser' };
    if (/(Xbox.+Edg?\/|Android.+EdgA\/|iPhone.+EdgiOS\/|Macintosh.+MacEdgeClient\/|Windows Phone.+Edge?\/|Windows.+Edge?\/)/.test(userAgent)) return { name: `Edge`, type: 'browser' };
    if (/^.*Android.*Chrome\/|CrOS.*Chrome\/|Linux.*Chrome\/|Mac OS X.*Chrome\/|Windows.*Chrome\/|iPad.*CriOS\/|iPhone.*CriOS\/|^Chrome\/\d.*CFNetwork/.test(userAgent)) return { name: `Chrome`, type: 'browser' };
    if (/Firefox\/|(Android|iPhone|iPad).*Focus\/| FxiOS\//.test(userAgent)) return { name: `Firefox`, type: 'browser' };
    if (/MSIE | Trident\//.test(userAgent)) return { name: `Internet Explorer`, type: 'browser' };
    if (/^NCSA Mosaic\//.test(userAgent)) return { name: `NCSA Mosaic`, type: 'browser' };
    if (/Macintosh.*AppleWebKit.*Safari\/|Windows.*AppleWebKit.*Safari\/|iPhone.*AppleWebKit.*Safari\/|iPad.*AppleWebKit.*Safari\/|^MobileSafari\/|^Safari\//.test(userAgent)) return { name: `Safari`, type: 'browser' };
    if (/Mozilla\/5\.0 \([A-Za-z ]+; CPU( iPhone)? OS [\d_]+ like Mac OS X\) AppleWebKit\/[\d.]+ \(KHTML, like Gecko\) Mobile\/[0-9A-Z]{6,}/.test(userAgent)) return { name: `iOS WebView`, type: 'browser' };
}

export function findUserAgentDeviceEntity(userAgent: string): Entity | undefined {
    if (/HomePod|^AirPodcasts\/\d/.test(userAgent)) return { name: `Apple HomePod`, type: 'device', category: 'smart_speaker' };
    if (/ipad|iPad|IPAD/.test(userAgent)) return { name: `Apple iPad`, type: 'device', category: 'mobile' };
    if (/Apple TV|AppleTV|apple;apple_tv/.test(userAgent)) return { name: `Apple TV`, type: 'device', category: 'smart_tv' };
    if (/iphone|iOS|iPhone|CFNetwork| ios |phone;ios/.test(userAgent)) return { name: `Apple iPhone`, type: 'device', category: 'mobile' };
    if (/watch|Watch OS/.test(userAgent)) return { name: `Apple Watch`, type: 'device', category: 'watch' };
    if (/iPod|IPOD/.test(userAgent)) return { name: `Apple iPod`, type: 'device', category: 'mobile' };
    if (/OS X|OSX|Macintosh|Macbook/.test(userAgent)) return { name: `Apple Computer`, type: 'device', category: 'computer' };
    if (/GoogleChirp|Google-Speech-Actions|CrKey.*DeviceType\/SmartSpeaker/.test(userAgent)) return { name: `Google Home`, type: 'device', category: 'smart_speaker' };
    if (/Chromebook|CrOS/.test(userAgent)) return { name: `Google Chromebook`, type: 'device', category: 'computer' };
    if (/[a|A]ndroid.*[t|T]ablet|[t|T]ablet.*[a|A]ndroid|SM-T| GT-|^ZTE;Xview/.test(userAgent)) return { name: `Android Tablet`, type: 'device', category: 'mobile' };
    if (/SmartTV|[Rr]oku|CrKey|AFTT Build|AFTM Build|BRAVIA 4K|Opera TV|SmartTv|TSBNetTV|SMART-TV|TV Safari|WebTV|InettvBrowser|GoogleTV|HbbTV|smart-tv|olleh tv|^sony_tv;ps5;|Microsoft Xbox|^Google;Chromecast|^TCL;|^Xiaomi;(MIBOX|MiTV-)|^samsung;[uq]n\d|^hisense;(c235x|c205x)|^skyworth;NoblexTV|^Sony;BRAVIA|^tcl;(c1\d{2}x|7140x)|^onn\.;8821x|^Funai;PHILIPS4KTV|^Sagemcom;VSB|^TPV;[A-Z0-9]+AndroidTV;/.test(userAgent)) return { name: `Other Smart TV`, type: 'device', category: 'smart_tv' };
    if (/ServeStream|Android|android|HTC|ExoPlayer|^AntennaPod\/|^GSA\/.*\.arm(64)?$|^sp-agent|^PRDownloader$|^(Turtlecast|TURTLECAST)\//.test(userAgent)) return { name: `Android Phone`, type: 'device', category: 'mobile' };
    if (/Windows|windows|WMPlayer|Winamp|Win32|Win64|NSPlayer|MediaMonkey|NSPlayer|PC/.test(userAgent)) return { name: `Windows Computer`, type: 'device', category: 'computer' };
    if (/Alexa|^Echo\/|^Amazon;Echo/.test(userAgent)) return { name: `Amazon Smart Speaker`, type: 'device', category: 'smart_speaker' };
    if (/sonos|Sonos|^Bose\/|^VictorReader|^Bose;Bose_(Home_Speaker|Soundbar)|^HEOS;DENON|^Denon;DENON-DWHS|^Storybutton\//.test(userAgent)) return { name: `Other Smart Speaker`, type: 'device', category: 'smart_speaker' };
    if (/Lavf\/|desktop|Linux|linux|VLC|^okhttp\/|CastBox\//.test(userAgent)) return { name: `Other Computer`, type: 'device', category: 'computer' };
    if (/tablet|Tablet/.test(userAgent)) return { name: `Other Tablet`, type: 'device', category: 'mobile' };
    if (/watch|Watch/.test(userAgent)) return { name: `Other Watch`, type: 'device', category: 'watch' };
    if (/Player FM$|^Podkicker\/|spotify_unknown|^Castro|^Swoot Agent| KAIOS\/|^Zune\/|^PodcastGuru |^Pocket Casts$|^AmazonMusic$|RTL\+/.test(userAgent)) return { name: `Other Mobile Device`, type: 'device', category: 'mobile' };
}

export function findUserAgentReferrerEntity(referer: string): Entity | undefined {
    if (/^https:\/\/music\.amazon\./.test(referer)) return { name: `Amazon Music`, type: 'referrer', category: 'app' };
    if (/^https:\/\/(embed\.)?podcasts\.apple\.com/.test(referer)) return { name: `Apple Podcasts`, type: 'referrer', category: 'app' };
    if (/:\/\/www\.audible(\.com|\.co\.uk)\//.test(referer)) return { name: `Audible`, type: 'referrer', category: 'app' };
    if (/:\/\/[^.\/]+\.buzzsprout\.com\//.test(referer)) return { name: `Buzzsprout Web Player`, type: 'referrer', category: 'host' };
    if (/:\/\/player\.captivate\.fm\//.test(referer)) return { name: `Captivate Web Player`, type: 'referrer', category: 'host' };
    if (/:\/\/castamatic\.com\//.test(referer)) return { name: `Castamatic`, type: 'referrer', category: 'app' };
    if (/^https:\/\/castbox\.fm\//.test(referer)) return { name: `CastBox`, type: 'referrer', category: 'app' };
    if (/^https:\/\/castro\.fm\//.test(referer)) return { name: `Castro`, type: 'referrer', category: 'app' };
    if (/:\/\/link\.chtbl\.com\//.test(referer)) return { name: `Chartable`, type: 'referrer' };
    if (/:\/\/curiocaster\.com\//.test(referer)) return { name: `CurioCaster`, type: 'referrer', category: 'app' };
    if (/^https:\/\/ceskepodcasty\.cz\//.test(referer)) return { name: `Czech Podcasts`, type: 'referrer' };
    if (/^https:\/\/www\.deezer\.com\//.test(referer)) return { name: `Deezer`, type: 'referrer', category: 'app' };
    if (/^https?:\/\/(lm|m|www|l)\.facebook\.com\//.test(referer)) return { name: `Facebook`, type: 'referrer', category: 'app' };
    if (/:\/\/feedly\.com\//.test(referer)) return { name: `Feedly`, type: 'referrer', category: 'app' };
    if (/:\/\/[^.\/]+\.feedspot\.com\//.test(referer)) return { name: `Feedspot`, type: 'referrer', category: 'app' };
    if (/:\/\/fountain\.fm\//.test(referer)) return { name: `Fountain`, type: 'referrer', category: 'app' };
    if (/^https:\/\/gaana\.com\//.test(referer)) return { name: `Gaana`, type: 'referrer', category: 'app' };
    if (/^https:\/\/(www\.)?goodpods\.com/.test(referer)) return { name: `Goodpods`, type: 'referrer', category: 'app' };
    if (/^https:\/\/podcasts\.google\.com\//.test(referer)) return { name: `Google Podcasts`, type: 'referrer', category: 'app' };
    if (/^https\:\/\/make\.headliner\.app\//.test(referer)) return { name: `Headliner`, type: 'referrer', category: 'app' };
    if (/^https:\/\/www\.iheart\.com\//.test(referer)) return { name: `iHeartRadio`, type: 'referrer', category: 'app' };
    if (/:\/\/www\.inoreader\.com\//.test(referer)) return { name: `Inoreader`, type: 'referrer', category: 'app' };
    if (/:\/\/www\.jam\.ai\//.test(referer)) return { name: `Jam`, type: 'referrer', category: 'app' };
    if (/:\/\/[^.\/]+\.justcast\.com\//.test(referer)) return { name: `JustCast`, type: 'referrer', category: 'host' };
    if (/kajabi\.com\/?$/.test(referer)) return { name: `Kajabi`, type: 'referrer', category: 'host' };
    if (/^https:\/\/www\.linkedin\.com\//.test(referer)) return { name: `LinkedIn`, type: 'referrer', category: 'app' };
    if (/^https:\/\/www\.listennotes\.com\//.test(referer)) return { name: `Listen Notes`, type: 'referrer' };
    if (/:\/\/lnbeats\.com\//.test(referer)) return { name: `LN Beats`, type: 'referrer', category: 'app' };
    if (/:\/\/luminarypodcasts\.com\//.test(referer)) return { name: `Luminary`, type: 'referrer', category: 'app' };
    if (/:\/\/[^.\/]+\.megaphone\.fm\//.test(referer)) return { name: `Megaphone`, type: 'referrer', category: 'host' };
    if (/^https:\/\/www\.mixcloud\.com\//.test(referer)) return { name: `Mixcloud`, type: 'referrer', category: 'app' };
    if (/^https:\/\/overcast\.fm\//.test(referer)) return { name: `Overcast`, type: 'referrer', category: 'app' };
    if (/^https:\/\/(\w*\.)?pandora\.com\//.test(referer)) return { name: `Pandora`, type: 'referrer', category: 'app' };
    if (/^https:\/\/(www\.|app\.)?parler\.com/.test(referer)) return { name: `Parler`, type: 'referrer', category: 'app' };
    if (/:\/\/playapod\.com\//.test(referer)) return { name: `Playapod`, type: 'referrer', category: 'app' };
    if (/^https:\/\/(\w*\.)?player\.fm\//.test(referer)) return { name: `Player FM`, type: 'referrer', category: 'app' };
    if (/:\/\/play\.pocketcasts\.com\/|:\/\/pca\.st\//.test(referer)) return { name: `Pocket Casts`, type: 'referrer', category: 'app' };
    if (/^https?:\/\/(old\.)?podbay\.fm\//.test(referer)) return { name: `Podbay`, type: 'referrer', category: 'app' };
    if (/^https:\/\/www\.podbean\.com\//.test(referer)) return { name: `Podbean`, type: 'referrer', category: 'host' };
    if (/^https:\/\/(www\.)?podcastaddict\.com/.test(referer)) return { name: `Podcast Addict`, type: 'referrer', category: 'app' };
    if (/^https:\/\/podcastindex\.org/.test(referer)) return { name: `Podcast Index`, type: 'referrer' };
    if (/^https:\/\/podcast\.app\//.test(referer)) return { name: `Podcast.app`, type: 'referrer', category: 'app' };
    if (/https:\/\/www\.podchaser\.com\//.test(referer)) return { name: `Podchaser`, type: 'referrer', category: 'app' };
    if (/:\/\/[^.\/]+\.podfriend\.com\//.test(referer)) return { name: `Podfriend`, type: 'referrer', category: 'app' };
    if (/:\/\/podgrabber\.com\//.test(referer)) return { name: `PodGrabber`, type: 'referrer', category: 'app' };
    if (/\/\/pod\.link\//.test(referer)) return { name: `PodLink`, type: 'referrer', category: 'app' };
    if (/:\/\/podmust\.com\//.test(referer)) return { name: `Podmust`, type: 'referrer', category: 'app' };
    if (/podplay\.com/.test(referer)) return { name: `Podplay`, type: 'referrer', category: 'app' };
    if (/^https:\/\/podtail\.com\//.test(referer)) return { name: `Podtail`, type: 'referrer' };
    if (/:\/\/podverse\.fm\//.test(referer)) return { name: `Podverse`, type: 'referrer', category: 'app' };
    if (/:\/\/podvine\.com\//.test(referer)) return { name: `Podvine`, type: 'referrer', category: 'host' };
    if (/^https:\/\/podyssey\.fm\//.test(referer)) return { name: `Podyssey`, type: 'referrer', category: 'app' };
    if (/:\/\/(embed\.)?radiopublic\.com\//.test(referer)) return { name: `RadioPublic`, type: 'referrer', category: 'app' };
    if (/:\/\/player\.simplecast\.com\//.test(referer)) return { name: `Simplecast`, type: 'referrer', category: 'host' };
    if (/https:\/\/(open|api-partner)\.spotify\.com/.test(referer)) return { name: `Spotify`, type: 'referrer', category: 'app' };
    if (/^https:\/\/(www|app|classic)\.stitcher\.com\//.test(referer)) return { name: `Stitcher`, type: 'referrer', category: 'app' };
    if (/:\/\/([^.\/]+\.)?transistor\.fm\//.test(referer)) return { name: `Transistor Web Player`, type: 'referrer', category: 'host' };
    if (/:\/\/(pod|true)fans\.fm\//.test(referer)) return { name: `TrueFans`, type: 'referrer', category: 'app' };
    if (/^https:\/\/tunein\.com\//.test(referer)) return { name: `TuneIn`, type: 'referrer', category: 'app' };
    if (/^https:\/\/podcasts\.wixapps\.net/.test(referer)) return { name: `Wix`, type: 'referrer', category: 'host' };
}
